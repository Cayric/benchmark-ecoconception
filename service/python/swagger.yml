openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "An API about library and notes"
  version: "1.0.0"

servers:
  - url: "/"

components:
  schemas:
    Library:
      type: "object"
      properties:
        name:
          type: "string"
    Author:
      type: "object"
      properties:
        name:
          type: "string"
        library_id:
          type: integer
    Book:
      type: "object"
      properties:
        title:
          type: "string"
        synopsis:
          type: "string"
        author_id:
          type: integer
  parameters:
    name:
      name: "name"
      description: "Last name of the person to get"
      in: path
      required: true
      schema:
        type: "string"

paths:
  /library:
    get:
      operationId: "library.read_all"
      tags:
        - "Library"
      summary: "Read the list of library"
      responses:
        "200":
          description: "Successfully read library list"
    post:
      operationId: "library.create"
      tags:
        - Library
      summary: "Create a library"
      requestBody:
          description: "Library to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "library"
                $ref: "#/components/schemas/Library"
      responses:
        "201":
          description: "Successfully created library"
  /author:
    get:
      operationId: "author.read_all"
      tags:
        - "Author"
      summary: "Read the list of authors"
      responses:
        "200":
          description: "Successfully read author list"
    post:
      operationId: "author.create"
      tags:
        - Author
      summary: "Create a author"
      requestBody:
        description: "Author to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "author"
              $ref: "#/components/schemas/Author"
      responses:
        "201":
          description: "Successfully created author"
  /book:
    get:
      operationId: "book.read_all"
      tags:
        - "Book"
      summary: "Read the list of books"
      responses:
        "200":
          description: "Successfully read book list"
    post:
      operationId: "book.create"
      tags:
        - Author
      summary: "Create a book"
      requestBody:
        description: "Book to create"
        required: True
        content:
          application/json:
            schema:
              x-body-name: "book"
              $ref: "#/components/schemas/Book"
      responses:
        "201":
          description: "Successfully created book"